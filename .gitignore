import tkinter as tk


def add_digit(digit):
    value = calc.get()
    if '0' in value and len(value) == 1:
        value = value[1:]
    calc.delete(0, tk.END)
    calc.insert(0, value + digit)


def enter():
    global count, label_osn, lst_cost_ves, lst_results, btn_next
    count += 1
    value = calc.get()
    if count == 1:
        label_osn.config(text='Цена')
        label_osn.grid(row=0, column=3, sticky='we')
        calc.delete(0, tk.END)
        calc.insert(0, '0')
    elif count == 3:
        label_osn.config(text='Итого')
        label_osn.grid(row=0, column=3, sticky='we')

        lst_cost_ves.append(float(value))
        lst_results.append(lst_cost_ves[-1] * lst_cost_ves[-2])
        calc.insert(0, str(round(lst_results[-1], 2)))
        count = 0

    elif count == 2:
        label_osn.config(text='Вес')
        label_osn.grid(row=0, column=3, sticky='we')
        lst_cost_ves.append(float(value))
        calc.delete(0, tk.END)
        calc.insert(0, '0')
    elif count == 0:
        label_osn.config(text='НАЧНИТЕ')
        label_osn.grid(row=0, column=3, sticky='we')
    print(lst_cost_ves)
    print(lst_results)


def clear():
    calc.delete(0, 'end')
    calc.insert(0, '0')


def make_clear_button(c):
    return tk.Button(text=c, font=('Arial', 15, 'bold'), command=clear, activebackground='#C0C0C0')


def make_digit_button(digit):
    return tk.Button(text=digit, font=('Arial', 15, 'bold'), command=lambda: add_digit(digit),
                     activebackground='#C0C0C0')


def make_result_button(digit):
    return tk.Button(text=digit, font=('Arial', 15, 'bold'), command=lambda: result(), activebackground='#C0C0C0')


def result():
    global lst_results
    calc.delete(0, 'end')
    calc.insert(0, str(round(sum(lst_results), 2)))


def make_buttom_full_clean(digit):
    return tk.Button(text=digit, font=('Arial', 15, 'bold'), command=lambda: full_clean(), activebackground='#C0C0C0')


def full_clean():
    global lst_results, lst_cost_ves, count
    count = 0
    lst_cost_ves.clear()
    lst_results.clear()
    clear()


count = 0
lst_cost_ves = []
lst_results = []
win = tk.Tk()
win.title('Мамкин калькулятор')
win.geometry('375x300')
win.resizable(width=False, height=False)
calc = tk.Entry(win, bd=5, font=('Arial', 15, 'bold'), justify=tk.RIGHT, width=15)
calc.insert(0, '0')

label_osn = tk.Label(win, text='НАЧНИТЕ', font=('Arial', 15, 'bold'))
label_finresult = tk.Label(win, text='Итого всего', font=('Arial', 15, 'bold'))

make_digit_button('1').grid(row=1, column=0, sticky='wesn', padx=3, pady=3)
make_digit_button('2').grid(row=1, column=1, sticky='wesn', padx=3, pady=3)
make_digit_button('3').grid(row=1, column=2, sticky='wesn', padx=3, pady=3)
make_digit_button('4').grid(row=2, column=0, sticky='wesn', padx=3, pady=3)
make_digit_button('5').grid(row=2, column=1, sticky='wesn', padx=3, pady=3)
make_digit_button('6').grid(row=2, column=2, sticky='wesn', padx=3, pady=3)
make_digit_button('7').grid(row=3, column=0, sticky='wesn', padx=3, pady=3)
make_digit_button('8').grid(row=3, column=1, sticky='wesn', padx=3, pady=3)
make_digit_button('9').grid(row=3, column=2, sticky='wesn', padx=3, pady=3)
make_digit_button('0').grid(row=4, column=0, sticky='wesn', padx=3, pady=3)
make_digit_button('.').grid(row=4, column=2, sticky='wesn', padx=3, pady=3)

btn_next = tk.Button(text='Начать', font=('Arial', 15, 'bold'), command=lambda: enter(),
                     activebackground='#C0C0C0').grid(row=1, column=3, sticky='wesn', padx=3, pady=3)

make_clear_button('C').grid(row=3, column=3, sticky='wesn', padx=3, pady=3)

make_result_button('Финальное итого').grid(row=4, column=3, sticky='wesn', padx=3, pady=3)

label_osn.grid(row=0, column=3, sticky='we')

make_buttom_full_clean('Полная очистка').grid(row=2, column=3, sticky='wesn', padx=3, pady=3)

calc.grid(row=0, column=0, sticky='wens', columnspan=3)
win.grid_columnconfigure(0, minsize=60)
win.grid_columnconfigure(1, minsize=60)
win.grid_columnconfigure(2, minsize=60)
win.grid_columnconfigure(3, minsize=60)
win.grid_columnconfigure(4, minsize=60)

win.grid_rowconfigure(1, minsize=60)
win.grid_rowconfigure(0, minsize=60)
win.grid_rowconfigure(2, minsize=60)
win.grid_rowconfigure(3, minsize=60)
win.grid_rowconfigure(4, minsize=60)

win.mainloop()
